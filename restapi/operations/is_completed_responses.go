// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaz-as/zip/models"
)

// IsCompletedOKCode is the HTTP code returned for type IsCompletedOK
const IsCompletedOKCode int = 200

/*
IsCompletedOK is archive completed

swagger:response isCompletedOK
*/
type IsCompletedOK struct {

	/*
	  In: Body
	*/
	Payload bool `json:"body,omitempty"`
}

// NewIsCompletedOK creates IsCompletedOK with default headers values
func NewIsCompletedOK() *IsCompletedOK {

	return &IsCompletedOK{}
}

// WithPayload adds the payload to the is completed o k response
func (o *IsCompletedOK) WithPayload(payload bool) *IsCompletedOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is completed o k response
func (o *IsCompletedOK) SetPayload(payload bool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsCompletedOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// IsCompletedNotFoundCode is the HTTP code returned for type IsCompletedNotFound
const IsCompletedNotFoundCode int = 404

/*
IsCompletedNotFound archive not found

swagger:response isCompletedNotFound
*/
type IsCompletedNotFound struct {
}

// NewIsCompletedNotFound creates IsCompletedNotFound with default headers values
func NewIsCompletedNotFound() *IsCompletedNotFound {

	return &IsCompletedNotFound{}
}

// WriteResponse to the client
func (o *IsCompletedNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*
IsCompletedDefault generic error response

swagger:response isCompletedDefault
*/
type IsCompletedDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewIsCompletedDefault creates IsCompletedDefault with default headers values
func NewIsCompletedDefault(code int) *IsCompletedDefault {
	if code <= 0 {
		code = 500
	}

	return &IsCompletedDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the is completed default response
func (o *IsCompletedDefault) WithStatusCode(code int) *IsCompletedDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the is completed default response
func (o *IsCompletedDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the is completed default response
func (o *IsCompletedDefault) WithPayload(payload *models.Error) *IsCompletedDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the is completed default response
func (o *IsCompletedDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *IsCompletedDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
