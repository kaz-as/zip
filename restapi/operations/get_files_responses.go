// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaz-as/zip/models"
)

// GetFilesOKCode is the HTTP code returned for type GetFilesOK
const GetFilesOKCode int = 200

/*
GetFilesOK list of files

swagger:response getFilesOK
*/
type GetFilesOK struct {

	/*list of files
	  In: Body
	*/
	Payload []*models.FileHeader `json:"body,omitempty"`
}

// NewGetFilesOK creates GetFilesOK with default headers values
func NewGetFilesOK() *GetFilesOK {

	return &GetFilesOK{}
}

// WithPayload adds the payload to the get files o k response
func (o *GetFilesOK) WithPayload(payload []*models.FileHeader) *GetFilesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get files o k response
func (o *GetFilesOK) SetPayload(payload []*models.FileHeader) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.FileHeader, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFilesNotFoundCode is the HTTP code returned for type GetFilesNotFound
const GetFilesNotFoundCode int = 404

/*
GetFilesNotFound archive not found

swagger:response getFilesNotFound
*/
type GetFilesNotFound struct {
}

// NewGetFilesNotFound creates GetFilesNotFound with default headers values
func NewGetFilesNotFound() *GetFilesNotFound {

	return &GetFilesNotFound{}
}

// WriteResponse to the client
func (o *GetFilesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*
GetFilesDefault generic error response

swagger:response getFilesDefault
*/
type GetFilesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFilesDefault creates GetFilesDefault with default headers values
func NewGetFilesDefault(code int) *GetFilesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetFilesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get files default response
func (o *GetFilesDefault) WithStatusCode(code int) *GetFilesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get files default response
func (o *GetFilesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get files default response
func (o *GetFilesDefault) WithPayload(payload *models.Error) *GetFilesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get files default response
func (o *GetFilesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
