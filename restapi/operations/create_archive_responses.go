// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaz-as/zip/models"
)

// CreateArchiveOKCode is the HTTP code returned for type CreateArchiveOK
const CreateArchiveOKCode int = 200

/*
CreateArchiveOK zip file is producing

swagger:response createArchiveOK
*/
type CreateArchiveOK struct {

	/*
	  In: Body
	*/
	Payload models.ZipProducingSuccess `json:"body,omitempty"`
}

// NewCreateArchiveOK creates CreateArchiveOK with default headers values
func NewCreateArchiveOK() *CreateArchiveOK {

	return &CreateArchiveOK{}
}

// WithPayload adds the payload to the create archive o k response
func (o *CreateArchiveOK) WithPayload(payload models.ZipProducingSuccess) *CreateArchiveOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create archive o k response
func (o *CreateArchiveOK) SetPayload(payload models.ZipProducingSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateArchiveOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
CreateArchiveDefault generic error response

swagger:response createArchiveDefault
*/
type CreateArchiveDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateArchiveDefault creates CreateArchiveDefault with default headers values
func NewCreateArchiveDefault(code int) *CreateArchiveDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateArchiveDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create archive default response
func (o *CreateArchiveDefault) WithStatusCode(code int) *CreateArchiveDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create archive default response
func (o *CreateArchiveDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create archive default response
func (o *CreateArchiveDefault) WithPayload(payload *models.Error) *CreateArchiveDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create archive default response
func (o *CreateArchiveDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateArchiveDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
