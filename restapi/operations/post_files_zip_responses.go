// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaz-as/zip/models"
)

// PostFilesZipOKCode is the HTTP code returned for type PostFilesZipOK
const PostFilesZipOKCode int = 200

/*
PostFilesZipOK zip file is producing

swagger:response postFilesZipOK
*/
type PostFilesZipOK struct {

	/*
	  In: Body
	*/
	Payload models.ZipProducingSuccess `json:"body,omitempty"`
}

// NewPostFilesZipOK creates PostFilesZipOK with default headers values
func NewPostFilesZipOK() *PostFilesZipOK {

	return &PostFilesZipOK{}
}

// WithPayload adds the payload to the post files zip o k response
func (o *PostFilesZipOK) WithPayload(payload models.ZipProducingSuccess) *PostFilesZipOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post files zip o k response
func (o *PostFilesZipOK) SetPayload(payload models.ZipProducingSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFilesZipOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*
PostFilesZipDefault generic error response

swagger:response postFilesZipDefault
*/
type PostFilesZipDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostFilesZipDefault creates PostFilesZipDefault with default headers values
func NewPostFilesZipDefault(code int) *PostFilesZipDefault {
	if code <= 0 {
		code = 500
	}

	return &PostFilesZipDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post files zip default response
func (o *PostFilesZipDefault) WithStatusCode(code int) *PostFilesZipDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post files zip default response
func (o *PostFilesZipDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post files zip default response
func (o *PostFilesZipDefault) WithPayload(payload *models.Error) *PostFilesZipDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post files zip default response
func (o *PostFilesZipDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostFilesZipDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
