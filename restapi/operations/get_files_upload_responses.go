// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/kaz-as/zip/models"
)

// GetFilesUploadOKCode is the HTTP code returned for type GetFilesUploadOK
const GetFilesUploadOKCode int = 200

/*
GetFilesUploadOK list of chunks number

swagger:response getFilesUploadOK
*/
type GetFilesUploadOK struct {

	/*
	  In: Body
	*/
	Payload []models.ChunkNumber `json:"body,omitempty"`
}

// NewGetFilesUploadOK creates GetFilesUploadOK with default headers values
func NewGetFilesUploadOK() *GetFilesUploadOK {

	return &GetFilesUploadOK{}
}

// WithPayload adds the payload to the get files upload o k response
func (o *GetFilesUploadOK) WithPayload(payload []models.ChunkNumber) *GetFilesUploadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get files upload o k response
func (o *GetFilesUploadOK) SetPayload(payload []models.ChunkNumber) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilesUploadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]models.ChunkNumber, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetFilesUploadNotFoundCode is the HTTP code returned for type GetFilesUploadNotFound
const GetFilesUploadNotFoundCode int = 404

/*
GetFilesUploadNotFound archive not found

swagger:response getFilesUploadNotFound
*/
type GetFilesUploadNotFound struct {
}

// NewGetFilesUploadNotFound creates GetFilesUploadNotFound with default headers values
func NewGetFilesUploadNotFound() *GetFilesUploadNotFound {

	return &GetFilesUploadNotFound{}
}

// WriteResponse to the client
func (o *GetFilesUploadNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}

/*
GetFilesUploadDefault generic error response

swagger:response getFilesUploadDefault
*/
type GetFilesUploadDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetFilesUploadDefault creates GetFilesUploadDefault with default headers values
func NewGetFilesUploadDefault(code int) *GetFilesUploadDefault {
	if code <= 0 {
		code = 500
	}

	return &GetFilesUploadDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get files upload default response
func (o *GetFilesUploadDefault) WithStatusCode(code int) *GetFilesUploadDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get files upload default response
func (o *GetFilesUploadDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get files upload default response
func (o *GetFilesUploadDefault) WithPayload(payload *models.Error) *GetFilesUploadDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get files upload default response
func (o *GetFilesUploadDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetFilesUploadDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
