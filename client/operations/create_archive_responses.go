// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/kaz-as/zip/models"
)

// CreateArchiveReader is a Reader for the CreateArchive structure.
type CreateArchiveReader struct {
	formats strfmt.Registry
	writer  io.Writer
}

// ReadResponse reads a server response into the received o.
func (o *CreateArchiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateArchiveOK(o.writer)
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewCreateArchiveDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateArchiveOK creates a CreateArchiveOK with default headers values
func NewCreateArchiveOK(writer io.Writer) *CreateArchiveOK {
	return &CreateArchiveOK{

		Payload: writer,
	}
}

/*
CreateArchiveOK describes a response with status code 200, with default header values.

zip file is producing
*/
type CreateArchiveOK struct {
	Payload io.Writer
}

// IsSuccess returns true when this create archive o k response has a 2xx status code
func (o *CreateArchiveOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create archive o k response has a 3xx status code
func (o *CreateArchiveOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create archive o k response has a 4xx status code
func (o *CreateArchiveOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create archive o k response has a 5xx status code
func (o *CreateArchiveOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create archive o k response a status code equal to that given
func (o *CreateArchiveOK) IsCode(code int) bool {
	return code == 200
}

func (o *CreateArchiveOK) Error() string {
	return fmt.Sprintf("[POST /files/zip][%d] createArchiveOK  %+v", 200, o.Payload)
}

func (o *CreateArchiveOK) String() string {
	return fmt.Sprintf("[POST /files/zip][%d] createArchiveOK  %+v", 200, o.Payload)
}

func (o *CreateArchiveOK) GetPayload() io.Writer {
	return o.Payload
}

func (o *CreateArchiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateArchiveDefault creates a CreateArchiveDefault with default headers values
func NewCreateArchiveDefault(code int) *CreateArchiveDefault {
	return &CreateArchiveDefault{
		_statusCode: code,
	}
}

/*
CreateArchiveDefault describes a response with status code -1, with default header values.

generic error response
*/
type CreateArchiveDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create archive default response
func (o *CreateArchiveDefault) Code() int {
	return o._statusCode
}

// IsSuccess returns true when this create archive default response has a 2xx status code
func (o *CreateArchiveDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this create archive default response has a 3xx status code
func (o *CreateArchiveDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this create archive default response has a 4xx status code
func (o *CreateArchiveDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this create archive default response has a 5xx status code
func (o *CreateArchiveDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this create archive default response a status code equal to that given
func (o *CreateArchiveDefault) IsCode(code int) bool {
	return o._statusCode == code
}

func (o *CreateArchiveDefault) Error() string {
	return fmt.Sprintf("[POST /files/zip][%d] createArchive default  %+v", o._statusCode, o.Payload)
}

func (o *CreateArchiveDefault) String() string {
	return fmt.Sprintf("[POST /files/zip][%d] createArchive default  %+v", o._statusCode, o.Payload)
}

func (o *CreateArchiveDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *CreateArchiveDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
